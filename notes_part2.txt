symboltable wordt een dictionary:
	key = de identifier
	value = een tupel van declaratie-positie, output en input type, bij variables is input 'None'
	voorbeeld:
		"Int a" geeft {'a' => ((1,4), 'Int', None)}
		"Int foo(Bool b)" geeft {'foo' => ((1,4), 'Int', ['Bool'])}
		
		
returnen moet altijd afhankelijk van type van functie.. checken?

ntuples voor in de extension?

a					>= [Int] 			is true
a					>= a 				is true
a					>= Int, Bool 		is true
a					>= Void 			is false

Int 				>= Bool 			is false
Bool 				>= Int 				is false
Void 				>= Void 			is true
Int 				>= Int 				is true
Bool 				>= Bool 			is true
Void 				>= Int 				is false (C vindt dit prima, Java niet, Clean.. vast niet)
Int 				>= Void 			is false

Int, Bool, Void 	>= a 				is false
a >= []		true
[] >= a 	false

Int >= []	false
[] >= Int 	false

[a] >= []	true
[] >= [a]	true


# returntype checken


# Oeps
function a a -> Int

f(1, True)

Int f(a x, a y) {
	a id = 4;
	return 1;
}

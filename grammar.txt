Decl 	= VarDecl
		| FunDecl

VarDecl = Type id "=" Exp ";"

FunDecl = "Void" id "(" [ Fargs ] ")" "{" VarDecl* Stmt+ "}"
		| Type id "(" [ Fargs ] ")" "{" VarDecl* Stmt+ "}"
				
Type 	= "Int"
		| "Bool"
		| "(" Type "," Type ")"
		| "[" Type "]"
		| id
		
Fargs 	= Type id [ "," Fargs ]
		
Stmt	= "{" Stmt* "}"
		| "if" "(" Exp ")" Stmt [ "else" Stmt ]
		| "while" "(" Exp ")" Stmt
		| ExpFunc ";"
		| ExpField "=" Exp ";"
		| "return" [ Exp ] ";"
		
Exp 	= ExpOr
ExpOr 	= ExpAnd	("||" ExpAnd)*
ExpAnd 	= ExpEq 	("&&" ExpEq)*
ExpEq 	= ExpCmp 	(("==" | "!=") ExpCmp)*
ExpCmp 	= ExpAdd 	(("<" | "<=" | ">" | ">=") ExpAdd)*
ExpAdd 	= ExpMult 	(("+" | "-") ExpMult)*
ExpMult = ExpCon 	(("*" | "/" | "%") ExpCon)*
ExpCon	= ExpUn 	":" ExpCon
		| ExpUn
ExpUn 	= ("-" | "!") ExpUn
		| ExpBase
ExpBase	= ExpField
		| ExpFunc
		| int
		| bool
		| "[" "]"
		| "(" Exp ")"
		| "(" Exp "," Exp ")"
		
ExpField  = id (".hd" | ".tl" | ".fst" | ".snd")*
ExpFunc	= id "(" [ ExpArgs ] ")"
ExpArgs	= Exp [ "," ExpArgs ]

int		= digit+
id 		= alpha ("_" | alphaNum)*
bool	= True | False